timew - Python API for Timewarrior
==============================================================================


Installation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For this API to work, you need Timewarrior__ installed

Installation is easy from the `Python Package Index`__

.. code:: bash

 pip install timew

.. __: https://taskwarrior.org/docs/timewarrior/download.html
.. __: https://pypi.org/project/timew/


API Documentation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Documentation is generated by Sphinx apidocs, from embedded docstrings
in napoleon format.  We generate ``.rst`` files, which are checked into
the repository and can be previewed online.

The timewarrior__ module contains the interesting docs, while the formal
doctree are rendered to an index__ and a more concise modules__ file.

.. __: docs/api/timew.timewarrior.rst
.. __: docs/api/index.rst
.. __: docs/api/modules.rst



Examples
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code:: pycon

 >>> from timew import TimeWarrior

 >>> timew = TimeWarrior()

 >>> timew.start(time=datetime(2018, 8, 15, 9, 0, 0), tags=['my tag'])
 Tracking "my tag"
 Started 2018-09-06T09:00:00
 Current         07T13:20:45
 Total              28:20:45

 >>> timew.cancel()
 Canceled active time tracking.

 >>> timew.delete(1)
 Deleted @1

 >>> timew.join(1, 2)
 Joined @1 and @2

 >>> from timew import Duration
 >>> from datetime import timedelta
 >>> timew.lengthen(1, Duration(timedelta(minutes=30)))
 Lengthened @1 by 0:30:00

 >>> timew.move(1, datetime(2018, 8, 15, 9, 0, 0))
 Moved @1 to 2018-09-05T09:00:00

 >>> timew.shorten(1, Duration(timedelta(minutes=10)))
 Shortened @1 by 0:10:00

 >>> timew.split(1)
 Split @1

 >>> timew.start(tags=['my tag'])
 Tracking "my tag"
 Started 2018-09-07T13:37:00
 Current               40:22
 Total               0:03:22

 >>> timew.stop()
 Recorded "my tag"
 Started 2018-09-07T13:37:00
 Ended                 40:53
 Total               0:03:53

 >>> timew.track(start_time=datetime(2018, 9, 7, 11, 0, 0),
                 end_time=datetime(2018, 9, 7, 12, 0, 0))
 Tracking "from 20180907T110000 - 20180907T120000"
 Started 2018-09-07T13:42:27
 Current                  27
 Total               0:00:00


Contributing to timew
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Code formatting
------------------------------------------------------------------------------

To avoid bikeshedding_ about code formatting, we use the following tools
to format our code in a deterministic way:

- isort_ for organizing imports
- Black_ for code formatting

Our CI pipeline will fail on code that does not conform. To check your
code, run ``tox`` in your local environment.

We recommend that you configure your favorite editor to run these
commands on a shortcut. Here__ is an example of my Emacs configuration

.. _bikeshedding: https://en.wiktionary.org/wiki/bikeshedding
.. _isort: https://github.com/timothycrosley/isort
.. _Black: https://github.com/ambv/black
.. __: https://github.com/tjaartvdwalt/emacs-config/blob/master/load.d/init-python.el#L16-L20
