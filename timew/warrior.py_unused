class TimeWarrior():
    """ The task warrior
    Really though, a python object with methods allowing you to interact
    with a taskwarrior database.
    """

    def __init__():


    def load_tasks(self, command='all'):
        """ Load all tasks.
        Similar to TaskWarrior, a specific command may be specified:
            all       - a list of all issues
            pending   - a list of all pending issues
            completed - a list of all completed issues
        By default, the 'all' command is run.
        >>> w = TaskWarrior()
        >>> tasks = w.load_tasks()
        >>> tasks.keys()
        ['completed', 'pending']
        >>> type(tasks['pending'])
        <type 'list'>
        >>> type(tasks['pending'][0])
        <type 'dict'>
        """

    @abc.abstractmethod
    def task_add(self, description, tags=None, **kw):
        """ Add a new task.
        Takes any of the keywords allowed by taskwarrior like proj or prior.
        """
        pass

    @abc.abstractmethod
    def task_done(self, **kw):
        pass

    @abc.abstractmethod
    def task_delete(self, **kw):
        pass

    @abc.abstractmethod
    def _load_task(self, **kw):
        pass

    @abc.abstractmethod
    def task_update(self, task):
        pass

    @abc.abstractmethod
    def get_task(self, **kw):
        pass

    def filter_by(self, func):
        tasks = self.load_tasks()
        filtered = filter(func, tasks)
        return filtered

    @classmethod
    def load_config(cls, config_filename=TASKRC, overrides=None):
        """ Load ~/.taskrc into a python dict
        >>> config = TaskWarrior.load_config()
        >>> config['data']['location']
        '/home/threebean/.task'
        >>> config['_forcecolor']
        'yes'
        """
        return TaskRc(config_filename, overrides=overrides)

    @abc.abstractmethod
    def task_start(self, **kw):
        pass

    @abc.abstractmethod
    def task_stop(self, **kw):
        pass

Usage: timew [--version]
       timew cancel
       timew continue [@<id>] [<date>|<interval>]
       timew delete @<id> [@<id> ...]
       timew join @<id> @<id>
       timew lengthen @<id> [@<id> ...] <duration>
       timew move @<id> <date>
       timew shorten @<id> [@<id> ...] <duration>
       timew split @<id> [@<id> ...]
       timew start [<date>] [<tag> ...]
       timew stop [<tag> ...]
       timew tag @<id> [@<id> ...] <tag> [<tag> ...]
       timew track <interval> [<tag> ...]
       timew untag @<id> [@<id> ...] <tag> [<tag> ...]
